[gd_scene load_steps=25 format=3 uid="uid://bjpo451a0eupa"]

[ext_resource type="ArrayMesh" uid="uid://cdgo2jvrkn5bc" path="res://models/weapons/axe.obj" id="1_sq7xt"]
[ext_resource type="Texture2D" uid="uid://ccv4wnujh6dk" path="res://textures/weapons/axe/axe_detail_mask.png" id="2_yqvpt"]
[ext_resource type="Texture2D" uid="uid://c3shivoy5d35f" path="res://textures/weapons/axe/axe_metallic.png" id="3_5xb37"]
[ext_resource type="AnimationLibrary" uid="uid://b7bfeeqv2plqj" path="res://scenes/weapons/axe_anims.res" id="3_t18wh"]
[ext_resource type="Texture2D" uid="uid://bxx7weftifjpm" path="res://textures/weapons/axe/axe_roughness.png" id="4_bycow"]
[ext_resource type="Script" path="res://scripts/weapons/weapon_double_barrel.gd" id="5_fkvwm"]

[sub_resource type="Shader" id="Shader_vna4n"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.1.1.stable.mono's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_nearest,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_nearest,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_nearest,repeat_enable;
uniform float specular;
uniform float metallic;
uniform sampler2D texture_detail_albedo : source_color,filter_nearest,repeat_enable;
uniform sampler2D texture_detail_normal : hint_normal,filter_nearest,repeat_enable;
uniform sampler2D texture_detail_mask : hint_default_white,filter_nearest,repeat_enable;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

global uniform float viewmodel_fov;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	
	float onetanfov = 1.0f / tan(0.5f * (viewmodel_fov * PI / 180.0f));
	float aspect = VIEWPORT_SIZE.x / VIEWPORT_SIZE.y;
	// modify projection matrix
	PROJECTION_MATRIX[1][1] = -onetanfov;
	PROJECTION_MATRIX[0][0] = onetanfov / aspect;
	
	// draws the viewmodel over everything (disable if you want dof near on viewmodel)
	POSITION = PROJECTION_MATRIX * MODELVIEW_MATRIX * vec4(VERTEX.xyz, 1.0);
	POSITION.z = mix(POSITION.z, 0, 0.99);
}


void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	vec4 detail_tex = texture(texture_detail_albedo,base_uv);
	vec4 detail_norm_tex = texture(texture_detail_normal,base_uv);
	vec4 detail_mask_tex = texture(texture_detail_mask,base_uv);
	vec3 detail = mix(ALBEDO.rgb,detail_tex.rgb,detail_tex.a);
	vec3 detail_norm = mix(NORMAL_MAP,detail_norm_tex.rgb,detail_tex.a);
	NORMAL_MAP = mix(NORMAL_MAP,detail_norm,detail_mask_tex.r);
	ALBEDO.rgb = mix(ALBEDO.rgb,detail,detail_mask_tex.r);
}
"

[sub_resource type="Gradient" id="Gradient_v5jf5"]
interpolation_mode = 1
offsets = PackedFloat32Array(0, 0.2, 0.5, 0.7)
colors = PackedColorArray(0.278431, 0.172549, 0.0470588, 1, 0.341176, 0.207843, 0.0784314, 1, 0.447059, 0.298039, 0.14902, 1, 0.415686, 0.313726, 0.145098, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_q3vr3"]
frequency = 0.1

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_tpyvc"]
width = 64
height = 64
generate_mipmaps = false
seamless_blend_skirt = 1.0
color_ramp = SubResource("Gradient_v5jf5")
noise = SubResource("FastNoiseLite_q3vr3")

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_eu08m"]
width = 64
height = 64
generate_mipmaps = false
seamless_blend_skirt = 1.0
as_normal_map = true
bump_strength = 4.0
noise = SubResource("FastNoiseLite_q3vr3")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_h7uo5"]
render_priority = 0
shader = SubResource("Shader_vna4n")
shader_parameter/albedo = Color(0.501961, 0.501961, 0.501961, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 1.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_metallic = ExtResource("3_5xb37")
shader_parameter/texture_roughness = ExtResource("4_bycow")
shader_parameter/texture_detail_albedo = SubResource("NoiseTexture2D_tpyvc")
shader_parameter/texture_detail_normal = SubResource("NoiseTexture2D_eu08m")
shader_parameter/texture_detail_mask = ExtResource("2_yqvpt")

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_aiqnh"]
animation = &"axe_anims/axe_alt_swing"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_062bb"]
animation = &"axe_anims/axe_alt_idle"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_ikk8f"]
animation = &"axe_anims/axe_deploy"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_a63jw"]
animation = &"axe_anims/axe_swing"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_r3rf8"]
animation = &"axe_anims/axe_idle"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_mfm4b"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_3p3cv"]
switch_mode = 2
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_60alo"]
switch_mode = 2
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_n2tkb"]
xfade_time = 0.1

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_scqc2"]
xfade_time = 0.1

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_dgwwc"]
switch_mode = 2
advance_mode = 2

[sub_resource type="AnimationNodeStateMachine" id="AnimationNodeStateMachine_o311l"]
states/alt_firing/node = SubResource("AnimationNodeAnimation_aiqnh")
states/alt_firing/position = Vector2(471.555, 200)
states/alt_idle/node = SubResource("AnimationNodeAnimation_062bb")
states/alt_idle/position = Vector2(624.592, 100)
states/deploy/node = SubResource("AnimationNodeAnimation_ikk8f")
states/deploy/position = Vector2(356.333, 100.444)
states/firing/node = SubResource("AnimationNodeAnimation_a63jw")
states/firing/position = Vector2(624.333, 199.111)
states/idle/node = SubResource("AnimationNodeAnimation_r3rf8")
states/idle/position = Vector2(472.333, 100)
transitions = ["Start", "deploy", SubResource("AnimationNodeStateMachineTransition_mfm4b"), "deploy", "idle", SubResource("AnimationNodeStateMachineTransition_3p3cv"), "alt_firing", "idle", SubResource("AnimationNodeStateMachineTransition_60alo"), "firing", "alt_firing", SubResource("AnimationNodeStateMachineTransition_n2tkb"), "alt_firing", "firing", SubResource("AnimationNodeStateMachineTransition_scqc2"), "firing", "alt_idle", SubResource("AnimationNodeStateMachineTransition_dgwwc")]
graph_offset = Vector2(-136, 58)

[node name="Axe" type="Node3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.25, -0.35)

[node name="Axe" type="MeshInstance3D" parent="."]
transform = Transform3D(0.499978, -0.866038, 0, 0.866038, 0.499978, 0, 0, 0, 1, -0.15, 0.00085694, 0)
layers = 4
material_override = SubResource("ShaderMaterial_h7uo5")
cast_shadow = 0
mesh = ExtResource("1_sq7xt")
script = ExtResource("5_fkvwm")
bullet = "res://scenes/bullets/player/melee_scan.tscn"
shot_cooldown = 0.4

[node name="Spawner" type="Marker3D" parent="Axe"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 0, 0)

[node name="AltSpawner" type="Marker3D" parent="Axe"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 0, 0)

[node name="AnimationTree" type="AnimationTree" parent="Axe"]
tree_root = SubResource("AnimationNodeStateMachine_o311l")
anim_player = NodePath("../../AnimationPlayer")
active = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../Axe/AnimationTree")
libraries = {
"axe_anims": ExtResource("3_t18wh")
}

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
volume_db = -3.0
