[gd_scene load_steps=26 format=3 uid="uid://erys0skiq3pe"]

[ext_resource type="PackedScene" uid="uid://uhlasvutim3e" path="res://models/objects/floodlight.glb" id="1_xylaw"]
[ext_resource type="Texture2D" uid="uid://vnoituiw2r36" path="res://models/objects/floodlight_flood_lamp_emissions.png" id="2_lw5of"]
[ext_resource type="Texture2D" uid="uid://cjarcv7edo6ue" path="res://textures/objects/floodlight/floodlight_projector.png" id="3_gcdu4"]
[ext_resource type="Material" uid="uid://c42r6gnwbsttx" path="res://materials/effects/fancy_halo.tres" id="4_ju66r"]
[ext_resource type="Texture2D" uid="uid://hk0k2coukjwc" path="res://textures/effects/halo.tres" id="4_k3p2m"]
[ext_resource type="Script" path="res://scripts/entities/status.gd" id="4_ttjty"]
[ext_resource type="PackedScene" uid="uid://cu70msbgu2ysm" path="res://scenes/effects/damage/metal_damage_sys.tscn" id="6_1a880"]
[ext_resource type="Script" path="res://scripts/effects/halo.gd" id="6_7uru3"]
[ext_resource type="PackedScene" uid="uid://bnsepaqu7j4p4" path="res://scenes/pickups/health/health_bonus_pickup.tscn" id="6_k2gu1"]
[ext_resource type="PackedScene" uid="uid://b8i1fe0bwht3k" path="res://scenes/pickups/armor/armor_bonus_pickup.tscn" id="7_44sqi"]
[ext_resource type="PackedScene" uid="uid://dl7fuv4wdxtjx" path="res://scenes/pickups/ammo/shell_pickup.tscn" id="8_t7pem"]
[ext_resource type="PackedScene" uid="uid://bqors63m1ug05" path="res://scenes/pickups/ammo/nail_pickup.tscn" id="9_7q55x"]
[ext_resource type="PackedScene" uid="uid://bfctj0w1fkgwy" path="res://scenes/effects/gibs/metal_shards.tscn" id="9_y2uec"]
[ext_resource type="PackedScene" uid="uid://l50jb3i7j7q7" path="res://scenes/pickups/ammo/small_cell_pickup.tscn" id="10_cvm0a"]

[sub_resource type="CylinderShape3D" id="CylinderShape3D_yhdyy"]
radius = 0.25

[sub_resource type="Shader" id="Shader_leo2j"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.1.stable.mono's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_disabled,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

#include \"res://shaders/includes/psx_inc.gdshaderinc\"

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	POSITION = map_affine(snap_vertex(PROJECTION_MATRIX * MODELVIEW_MATRIX * vec4(VERTEX, 1.0)));
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_7715u"]
resource_name = "Material.001"
render_priority = 0
shader = SubResource("Shader_leo2j")
shader_parameter/albedo = Color(0.906332, 0.906332, 0.906332, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.25
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 1.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)

[sub_resource type="Shader" id="Shader_75fvq"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.1.stable.mono's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_nearest,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_nearest,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_nearest,repeat_enable;
uniform float specular;
uniform float metallic;
uniform sampler2D texture_emission : source_color, hint_default_black,filter_nearest,repeat_enable;
uniform vec4 emission : source_color;
uniform float emission_energy;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


#include \"res://shaders/includes/psx_inc.gdshaderinc\"

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	POSITION = map_affine(snap_vertex(PROJECTION_MATRIX * MODELVIEW_MATRIX * vec4(VERTEX, 1.0)));
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	vec3 emission_tex = texture(texture_emission,base_uv).rgb;
	EMISSION = (emission.rgb+emission_tex)*emission_energy;
}
"

[sub_resource type="Gradient" id="Gradient_svjht"]
interpolation_mode = 1

[sub_resource type="GradientTexture2D" id="GradientTexture2D_mv8o2"]
gradient = SubResource("Gradient_svjht")
fill = 2
fill_from = Vector2(0.5, 0.125)
fill_to = Vector2(0.5, 0.03125)
metadata/_snap_enabled = true
metadata/_snap_count = 32

[sub_resource type="ShaderMaterial" id="ShaderMaterial_4orgm"]
render_priority = 0
shader = SubResource("Shader_75fvq")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.25
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 1.0
shader_parameter/emission = Color(0, 0, 0, 1)
shader_parameter/emission_energy = 5.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = SubResource("GradientTexture2D_mv8o2")
shader_parameter/texture_emission = ExtResource("2_lw5of")

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_70trk"]
load_path = "res://.godot/imported/halo.png-88068247d44276e09ca924d46b3606d1.s3tc.ctex"

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_efe04"]
transparency = 1
blend_mode = 1
shading_mode = 0
vertex_color_use_as_albedo = true
albedo_color = Color(1, 0.501961, 0, 1)
albedo_texture = SubResource("CompressedTexture2D_70trk")
billboard_mode = 1
fixed_size = true
proximity_fade_distance = 3.0
distance_fade_mode = 1

[sub_resource type="QuadMesh" id="QuadMesh_x6dbl"]
material = SubResource("StandardMaterial3D_efe04")
size = Vector2(2, 0.25)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_dkmya"]
transparency = 1
blend_mode = 1
shading_mode = 0
vertex_color_use_as_albedo = true
albedo_color = Color(1, 0.752941, 0.501961, 1)
albedo_texture = ExtResource("4_k3p2m")
billboard_mode = 1
fixed_size = true
proximity_fade_distance = 3.0
distance_fade_mode = 1

[node name="Floodlight" type="RigidBody3D"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CylinderShape3D_yhdyy")

[node name="floodlight" parent="." instance=ExtResource("1_xylaw")]

[node name="Stand" parent="floodlight" index="0"]
layers = 2
material_override = SubResource("ShaderMaterial_7715u")

[node name="Neck_L" parent="floodlight/Stand" index="0"]
layers = 2
material_override = SubResource("ShaderMaterial_7715u")

[node name="Lamp_L" parent="floodlight/Stand/Neck_L" index="0"]
layers = 2
material_override = SubResource("ShaderMaterial_4orgm")

[node name="SpotLight3D" type="SpotLight3D" parent="floodlight/Stand/Neck_L/Lamp_L" index="0"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 0, 0)
layers = 2
light_color = Color(1, 0.752941, 0.501961, 1)
light_energy = 5.0
light_projector = ExtResource("3_gcdu4")
shadow_enabled = true
distance_fade_enabled = true
spot_range = 25.0
spot_angle = 60.0

[node name="LensFlare" type="MeshInstance3D" parent="floodlight/Stand/Neck_L/Lamp_L/SpotLight3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.14)
layers = 2
material_override = ExtResource("4_ju66r")
cast_shadow = 0
visibility_range_end = 100.0
visibility_range_end_margin = 10.0
visibility_range_fade_mode = 1
mesh = SubResource("QuadMesh_x6dbl")
skeleton = NodePath("../..")
surface_material_override/0 = SubResource("StandardMaterial3D_dkmya")
script = ExtResource("6_7uru3")
color = Color(1, 0.752941, 0.501961, 1)

[node name="Neck_R" parent="floodlight/Stand" index="1"]
layers = 2
material_override = SubResource("ShaderMaterial_7715u")

[node name="Lamp_R" parent="floodlight/Stand/Neck_R" index="0"]
layers = 2
material_override = SubResource("ShaderMaterial_4orgm")

[node name="SpotLight3D" type="SpotLight3D" parent="floodlight/Stand/Neck_R/Lamp_R" index="0"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 0, 0)
layers = 2
light_color = Color(1, 0.752941, 0.501961, 1)
light_energy = 5.0
light_projector = ExtResource("3_gcdu4")
shadow_enabled = true
distance_fade_enabled = true
spot_range = 25.0
spot_angle = 60.0

[node name="LensFlare" type="MeshInstance3D" parent="floodlight/Stand/Neck_R/Lamp_R/SpotLight3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.15)
layers = 2
material_override = ExtResource("4_ju66r")
cast_shadow = 0
visibility_range_end = 100.0
visibility_range_end_margin = 10.0
visibility_range_fade_mode = 1
mesh = SubResource("QuadMesh_x6dbl")
skeleton = NodePath("../..")
surface_material_override/0 = SubResource("StandardMaterial3D_dkmya")
script = ExtResource("6_7uru3")
color = Color(1, 0.752941, 0.501961, 1)

[node name="Status" type="Node" parent="."]
script = ExtResource("4_ttjty")
gib_threshold = 0.0
damage_sys = ExtResource("6_1a880")
gibs = ExtResource("9_y2uec")
loot = Array[PackedScene]([ExtResource("6_k2gu1"), ExtResource("7_44sqi"), ExtResource("8_t7pem"), ExtResource("9_7q55x"), ExtResource("10_cvm0a")])

[editable path="floodlight"]
