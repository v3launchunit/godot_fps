[gd_scene load_steps=22 format=3 uid="uid://bpg03gfcso3kl"]

[ext_resource type="Script" path="res://scripts/pickups/health_pickup.gd" id="1_sb0jk"]
[ext_resource type="AudioStream" uid="uid://cr8v5feyxtf4l" path="res://audio/streams/pickups/pickup_health.wav" id="2_hobdx"]
[ext_resource type="Texture2D" uid="uid://hk0k2coukjwc" path="res://textures/effects/halo.tres" id="3_k2e0h"]
[ext_resource type="Script" path="res://scripts/effects/halo.gd" id="4_ec80x"]
[ext_resource type="ArrayMesh" uid="uid://e0yjfivl6sup" path="res://models/pickups/heart.obj" id="5_tvl1v"]

[sub_resource type="CylinderShape3D" id="CylinderShape3D_uc2sx"]
height = 1.0
radius = 0.25

[sub_resource type="SphereShape3D" id="SphereShape3D_0epo4"]
radius = 1.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_fpn42"]
resource_local_to_scene = true
render_priority = 100
transparency = 1
blend_mode = 1
depth_draw_mode = 2
no_depth_test = true
shading_mode = 0
vertex_color_use_as_albedo = true
albedo_texture = ExtResource("3_k2e0h")
billboard_mode = 1
fixed_size = true
proximity_fade_distance = 3.0
distance_fade_mode = 1
distance_fade_min_distance = 2.5

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_yrs74"]
transparency = 1
blend_mode = 1
shading_mode = 0
vertex_color_use_as_albedo = true
albedo_color = Color(0, 1, 0, 0.501961)
albedo_texture = ExtResource("3_k2e0h")
billboard_mode = 1
fixed_size = true
proximity_fade_distance = 3.0
distance_fade_mode = 1

[sub_resource type="QuadMesh" id="QuadMesh_daege"]
material = SubResource("StandardMaterial3D_yrs74")
size = Vector2(0.375, 0.375)

[sub_resource type="Shader" id="Shader_3a3pj"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.1.1.stable.mono's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_nearest,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_nearest,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_nearest,repeat_enable;
uniform float specular;
uniform float metallic;
uniform sampler2D texture_emission : source_color, hint_default_black,filter_nearest,repeat_enable;
uniform vec4 emission : source_color;
uniform float emission_energy;
uniform sampler2D texture_normal : hint_roughness_normal,filter_nearest,repeat_enable;
uniform float normal_scale : hint_range(-16,16);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

uniform float min_size = 1.0;
uniform float scale_flux = 0.25;

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	VERTEX *= (sin((TIME - sin(VERTEX.y))) * scale_flux * 0.5 + min_size + 1.0);
}






void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	NORMAL_MAP = texture(texture_normal,base_uv).rgb;
	NORMAL_MAP_DEPTH = normal_scale;
	vec3 emission_tex = texture(texture_emission,base_uv).rgb;
	EMISSION = (emission.rgb+emission_tex)*emission_energy * fma(sin(TIME*PI),0.5,1.0);
}
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_ddnp3"]
noise_type = 2
frequency = 0.3005
offset = Vector3(34.2, 0, 0)

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_blpww"]
width = 64
height = 64
invert = true
noise = SubResource("FastNoiseLite_ddnp3")

[sub_resource type="Gradient" id="Gradient_0tb73"]
interpolation_mode = 1
offsets = PackedFloat32Array(0, 0.5, 0.7)
colors = PackedColorArray(0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_mjwig"]
noise_type = 2
frequency = 0.1485

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_t5qiw"]
width = 64
height = 64
color_ramp = SubResource("Gradient_0tb73")
noise = SubResource("FastNoiseLite_mjwig")

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_eps00"]
width = 64
height = 64
invert = true
as_normal_map = true
noise = SubResource("FastNoiseLite_ddnp3")

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_el3df"]
width = 64
height = 64
invert = true
noise = SubResource("FastNoiseLite_ddnp3")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_56y00"]
render_priority = 0
shader = SubResource("Shader_3a3pj")
shader_parameter/albedo = Color(0, 1, 0, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/emission = Color(0, 0, 0, 1)
shader_parameter/emission_energy = 3.0
shader_parameter/normal_scale = 1.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/min_size = 1.0
shader_parameter/scale_flux = 0.5
shader_parameter/texture_albedo = SubResource("NoiseTexture2D_blpww")
shader_parameter/texture_roughness = SubResource("NoiseTexture2D_el3df")
shader_parameter/texture_emission = SubResource("NoiseTexture2D_t5qiw")
shader_parameter/texture_normal = SubResource("NoiseTexture2D_eps00")

[sub_resource type="Animation" id="Animation_wivti"]
resource_name = "anim"
length = 10.0
loop_mode = 1
tracks/0/type = "rotation_3d"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = PackedFloat32Array(0, 1, 0, 0, 0, 1, 2.5, 1, 0, 0.707, 0, 0.707, 5, 1, 0, 1, 0, 0, 7.5, 1, 0, -0.707, 0, 0.707, 10, 1, 0, 0, 0, 1)
tracks/1/type = "position_3d"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/keys = PackedFloat32Array(0, 1, 0, 0, 0, 2.5, 1, 0, 0.05, 0, 5, 1, 0, 0, 0, 7.5, 1, 0, 0.05, 0, 10, 1, 0, 0, 0)

[sub_resource type="AnimationLibrary" id="AnimationLibrary_4pudi"]
_data = {
"anim": SubResource("Animation_wivti")
}

[node name="HeartPickup" type="RigidBody3D"]
collision_layer = 8
lock_rotation = true
script = ExtResource("1_sb0jk")
heal_amount = 200
can_overheal = true
pickup_sound = ExtResource("2_hobdx")
pickup_text = "A still-beating heart (+200% bonus health)"

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CylinderShape3D_uc2sx")

[node name="Area3D" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0)
collision_mask = 2

[node name="CollisionShape3D" type="CollisionShape3D" parent="Area3D"]
transform = Transform3D(1, 0, 2.98023e-08, 0, 1, 0, -2.98023e-08, 0, 1, 0, 0.5, 0)
shape = SubResource("SphereShape3D_0epo4")

[node name="LensFlare" type="MeshInstance3D" parent="Area3D"]
transform = Transform3D(1, 0, 2.98023e-08, 0, 1, 0, -2.98023e-08, 0, 1, 0, 0.5, 0)
layers = 2
material_override = SubResource("StandardMaterial3D_fpn42")
cast_shadow = 0
visibility_range_end = 100.0
visibility_range_end_margin = 25.0
visibility_range_fade_mode = 1
mesh = SubResource("QuadMesh_daege")
script = ExtResource("4_ec80x")
color = Color(0, 1, 0, 1)

[node name="MeshInstance3D" type="MeshInstance3D" parent="Area3D"]
transform = Transform3D(0.25, 0, 4.25748e-08, 0, 0.25, 0, -4.25748e-08, 0, 0.25, -0.139497, 0.7, 0.0232516)
layers = 2
material_override = SubResource("ShaderMaterial_56y00")
cast_shadow = 0
visibility_range_end = 25.0
visibility_range_end_margin = 5.0
mesh = ExtResource("5_tvl1v")

[node name="OmniLight3D" type="OmniLight3D" parent="Area3D"]
transform = Transform3D(1, 0, 1.19209e-07, 0, 1, 0, -1.19209e-07, 0, 1, 0, 0.75, 0)
light_color = Color(0, 1, 0, 1)
light_energy = 2.0
light_bake_mode = 0
shadow_enabled = true
omni_range = 10.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../Area3D")
libraries = {
"": SubResource("AnimationLibrary_4pudi")
}
