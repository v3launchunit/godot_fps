[gd_scene load_steps=18 format=3 uid="uid://b2q7xucggusys"]

[ext_resource type="Script" path="res://scripts/pickups/weapon_pickup.gd" id="1_po7tn"]
[ext_resource type="AudioStream" uid="uid://dxscywpf2ven0" path="res://audio/streams/pickups/pickup_weapon.wav" id="2_d0qa4"]
[ext_resource type="ArrayMesh" uid="uid://ceibhbi3vm1n0" path="res://models/weapons/plasma_cannon.obj" id="2_i1dks"]
[ext_resource type="Material" uid="uid://b78l63b32udy2" path="res://materials/effects/halo.tres" id="3_5xv1i"]
[ext_resource type="Texture2D" uid="uid://hk0k2coukjwc" path="res://textures/effects/halo.tres" id="3_imcfa"]
[ext_resource type="Script" path="res://scripts/effects/halo.gd" id="5_s6pa8"]

[sub_resource type="CylinderShape3D" id="CylinderShape3D_uc2sx"]
height = 1.0
radius = 0.25

[sub_resource type="SphereShape3D" id="SphereShape3D_0epo4"]
radius = 1.0

[sub_resource type="Gradient" id="Gradient_4h0ey"]
colors = PackedColorArray(1, 1, 1, 1, 1, 1, 1, 0)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_b1ivu"]
gradient = SubResource("Gradient_4h0ey")
fill = 1
fill_from = Vector2(0.5, 0.5)
fill_to = Vector2(1, 0.5)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_hv0iq"]
transparency = 1
blend_mode = 1
shading_mode = 0
vertex_color_use_as_albedo = true
albedo_color = Color(1, 1, 0, 0.501961)
albedo_texture = SubResource("GradientTexture2D_b1ivu")
billboard_mode = 1
fixed_size = true
proximity_fade_distance = 3.0
distance_fade_mode = 1

[sub_resource type="QuadMesh" id="QuadMesh_e6p1o"]
material = SubResource("StandardMaterial3D_hv0iq")
size = Vector2(0.15, 0.15)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_48bv8"]
transparency = 1
blend_mode = 1
shading_mode = 0
vertex_color_use_as_albedo = true
albedo_color = Color(0.501961, 0, 1, 0.501961)
albedo_texture = ExtResource("3_imcfa")
billboard_mode = 1
fixed_size = true
proximity_fade_distance = 3.0
distance_fade_mode = 1

[sub_resource type="Shader" id="Shader_snc4y"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.1.stable.mono's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_nearest,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_nearest,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_nearest,repeat_enable;
uniform float specular;
uniform float metallic;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

#include \"res://shaders/includes/psx_inc.gdshaderinc\"

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	POSITION = map_affine(snap_vertex(PROJECTION_MATRIX * MODELVIEW_MATRIX * vec4(VERTEX, 1.0)));
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_hnpnp"]
render_priority = 0
shader = SubResource("Shader_snc4y")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.25
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 1.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)

[sub_resource type="Animation" id="Animation_wivti"]
resource_name = "anim"
length = 10.0
loop_mode = 1
tracks/0/type = "rotation_3d"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = PackedFloat32Array(0, 1, 0, 0, 0, 1, 2.5, 1, 0, 0.707, 0, 0.707, 5, 1, 0, 1, 0, 0, 7.5, 1, 0, -0.707, 0, 0.707, 10, 1, 0, 0, 0, 1)
tracks/1/type = "position_3d"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/keys = PackedFloat32Array(0, 1, 0, 0, 0, 2.5, 1, 0, 0.05, 0, 5, 1, 0, 0, 0, 7.5, 1, 0, 0.05, 0, 10, 1, 0, 0, 0)

[sub_resource type="AnimationLibrary" id="AnimationLibrary_4pudi"]
_data = {
"anim": SubResource("Animation_wivti")
}

[node name="PlasmaCannonPickup" type="RigidBody3D"]
collision_layer = 8
lock_rotation = true
script = ExtResource("1_po7tn")
weapon = "res://scenes/weapons/plasma_cannon.tscn"
starting_ammo = 20
flash_color = Color(1, 1, 0, 1)
pickup_sound = ExtResource("2_d0qa4")
pickup_text = "Pilfered a Plasma Cannon (and 20% cell charge)"

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CylinderShape3D_uc2sx")

[node name="Area3D" type="Area3D" parent="."]
collision_mask = 2

[node name="CollisionShape3D" type="CollisionShape3D" parent="Area3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.4, 0)
shape = SubResource("SphereShape3D_0epo4")

[node name="LensFlare" type="MeshInstance3D" parent="Area3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.75, 0)
layers = 2
material_override = ExtResource("3_5xv1i")
ignore_occlusion_culling = true
mesh = SubResource("QuadMesh_e6p1o")
surface_material_override/0 = SubResource("StandardMaterial3D_48bv8")
script = ExtResource("5_s6pa8")
color = Color(1, 0, 2, 1)

[node name="MeshInstance3D" type="MeshInstance3D" parent="Area3D"]
transform = Transform3D(1, -2.98023e-08, -1.3027e-15, 0, -4.37114e-08, 1, -2.98023e-08, -1, -4.37114e-08, 0, 0.25, 0)
layers = 2
material_override = SubResource("ShaderMaterial_hnpnp")
mesh = ExtResource("2_i1dks")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../Area3D")
libraries = {
"": SubResource("AnimationLibrary_4pudi")
}
