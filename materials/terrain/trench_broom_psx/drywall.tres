[gd_resource type="ShaderMaterial" load_steps=8 format=3 uid="uid://bde5vbq7ns88s"]

[sub_resource type="Shader" id="Shader_sovp2"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.1.stable.mono's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_nearest_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_nearest_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_nearest_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform sampler2D texture_normal : hint_roughness_normal,filter_nearest_mipmap,repeat_enable;
uniform float normal_scale : hint_range(-16,16);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


#include \"res://shaders/includes/psx_inc.gdshaderinc\"

void vertex() {
	UV = UV * vec2(0.0078125, 0.0078125) + uv1_offset.xy;
	POSITION = map_affine(snap_vertex(PROJECTION_MATRIX * MODELVIEW_MATRIX * vec4(VERTEX, 1.0)));
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	NORMAL_MAP = texture(texture_normal,base_uv).rgb;
	NORMAL_MAP_DEPTH = normal_scale;
}
"

[sub_resource type="Gradient" id="Gradient_xv8gv"]
interpolation_mode = 1
offsets = PackedFloat32Array(0, 0.8, 0.9)
colors = PackedColorArray(0.75, 0.75, 0.75, 1, 0.8, 0.8, 0.8, 1, 0.9, 0.9, 0.9, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_ocbel"]
noise_type = 2
frequency = 0.25

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_0b87q"]
width = 128
height = 128
invert = true
generate_mipmaps = false
seamless = true
seamless_blend_skirt = 0.25
normalize = false
color_ramp = SubResource("Gradient_xv8gv")
noise = SubResource("FastNoiseLite_ocbel")

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_5jj0l"]
width = 128
height = 128
invert = true
generate_mipmaps = false
seamless = true
seamless_blend_skirt = 0.25
as_normal_map = true
bump_strength = 6.0
normalize = false
noise = SubResource("FastNoiseLite_ocbel")

[sub_resource type="Gradient" id="Gradient_phtku"]
offsets = PackedFloat32Array(0.6, 1)
colors = PackedColorArray(0.75, 0.75, 0.75, 1, 0.5, 0.5, 0.5, 1)

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_vx4ie"]
width = 128
height = 128
invert = true
generate_mipmaps = false
seamless = true
seamless_blend_skirt = 0.25
normalize = false
color_ramp = SubResource("Gradient_phtku")
noise = SubResource("FastNoiseLite_ocbel")

[resource]
render_priority = 0
shader = SubResource("Shader_sovp2")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/normal_scale = 1.0
shader_parameter/uv1_scale = Vector3(0.0078125, 0.0078125, 0.0078125)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = SubResource("NoiseTexture2D_0b87q")
shader_parameter/texture_roughness = SubResource("NoiseTexture2D_vx4ie")
shader_parameter/texture_normal = SubResource("NoiseTexture2D_5jj0l")
