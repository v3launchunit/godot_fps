[gd_resource type="VisualShader" load_steps=26 format=3 uid="uid://dyecxfl8r46aq"]

[ext_resource type="Texture2D" uid="uid://6y7chuih264f" path="res://textures/effects/halo.png" id="1_xki41"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_0xdif"]
operator = 2

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_d6yay"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_yawhi"]
default_input_values = [0, 0.0, 1, 3.0]
operator = 3

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_56ljh"]
parameter_name = "Min_Distance"
hint = 1
min = 0.001
max = 10.0
default_value_enabled = true
default_value = 3.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_671y0"]
operator = 2

[sub_resource type="VisualShaderNodeLinearSceneDepth" id="VisualShaderNodeLinearSceneDepth_kno1p"]

[sub_resource type="VisualShaderNodeVectorDistance" id="VisualShaderNodeVectorDistance_pbq7r"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_i27g4"]
input_name = "node_position_world"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_j15cl"]
input_name = "camera_position_world"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_3kp43"]
operator = 1

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_asp1w"]
expanded_output_ports = [0]
parameter_name = "BaseColor"
default_value_enabled = true

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_sguu7"]
operator = 2

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_u3lhu"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_7elpt"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_v2q7n"]
size = Vector2(400.356, 186.421)
expression = "float depth = textureLod(depth_texture, SCREEN_UV, 0.0).r;
vec4 upos = INV_PROJECTION_MATRIX * vec4(node_pos, depth, 1.0);
vec3 pixel_position = upos.xyz / upos.w;
	
linear_depth = -pixel_position.z * 0.1;"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_6vswk"]
expanded_output_ports = [0]
input_name = "node_position_view"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_s42v1"]
expanded_output_ports = [0]
texture = ExtResource("1_xki41")

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_34fr2"]
expanded_output_ports = [0]

[sub_resource type="VisualShaderNodeBillboard" id="VisualShaderNodeBillboard_3oo0a"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_lkuhg"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_unjqk"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDistance" id="VisualShaderNodeVectorDistance_0lha1"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_wg0hc"]
input_name = "camera_position_world"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_p7hb8"]
input_name = "node_position_world"

[resource]
code = "shader_type spatial;
render_mode blend_add, depth_draw_never, cull_back, diffuse_lambert, specular_disabled, depth_test_disabled, unshaded, shadows_disabled;

uniform vec4 BaseColor : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform float Min_Distance : hint_range(0.0010000000475, 10) = 3;
uniform sampler2D tex_frg_6;
uniform sampler2D depth_tex_frg_15 : hint_depth_texture;



void vertex() {
// Input:5
	vec3 n_out5p0 = VERTEX;


// Input:8
	vec3 n_out8p0 = NODE_POSITION_WORLD;


// Input:7
	vec3 n_out7p0 = CAMERA_POSITION_WORLD;


// Distance:6
	float n_out6p0 = distance(n_out8p0, n_out7p0);


// VectorOp:4
	vec3 n_out4p0 = n_out5p0 * vec3(n_out6p0);


	mat4 n_out3p0;
// GetBillboardMatrix:3
	{
		mat4 __mvm = VIEW_MATRIX * mat4(INV_VIEW_MATRIX[0], INV_VIEW_MATRIX[1], INV_VIEW_MATRIX[2], MODEL_MATRIX[3]);
		n_out3p0 = __mvm;
	}


// Output:0
	VERTEX = n_out4p0;
	MODELVIEW_MATRIX = n_out3p0;


}

void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = BaseColor;
	float n_out2p4 = n_out2p0.a;


// Input:25
	vec3 n_out25p0 = NODE_POSITION_VIEW;


	float n_out24p0;
// Expression:24
	n_out24p0 = 0.0;
	{
		float depth = textureLod(depth_texture, SCREEN_UV, 0.0).r;
		vec4 upos = INV_PROJECTION_MATRIX * vec4(vec2(n_out25p0.xy), depth, 1.0);
		vec3 pixel_position = upos.xyz / upos.w;
			
		n_out24p0 = -pixel_position.z * 0.1;
	}


// Input:17
	vec3 n_out17p0 = NODE_POSITION_WORLD;


// Input:18
	vec3 n_out18p0 = CAMERA_POSITION_WORLD;


// Distance:16
	float n_out16p0 = distance(n_out17p0, n_out18p0);


// FloatOp:19
	float n_out19p0 = n_out24p0 - n_out16p0;


// Clamp:21
	float n_in21p1 = 0.00000;
	float n_in21p2 = 1.00000;
	float n_out21p0 = clamp(n_out19p0, n_in21p1, n_in21p2);


// FloatParameter:13
	float n_out13p0 = Min_Distance;


// FloatOp:12
	float n_out12p0 = n_out16p0 / n_out13p0;


// Clamp:11
	float n_in11p1 = 0.00000;
	float n_in11p2 = 1.00000;
	float n_out11p0 = clamp(n_out12p0, n_in11p1, n_in11p2);


// Texture2D:6
	vec4 n_out6p0 = texture(tex_frg_6, UV);
	float n_out6p4 = n_out6p0.a;


// FloatOp:10
	float n_out10p0 = n_out11p0 * n_out6p4;


// FloatOp:14
	float n_out14p0 = n_out10p0 * n_out2p4;


// FloatOp:20
	float n_out20p0 = n_out21p0 * n_out14p0;


	float n_out15p0;
// LinearSceneDepth:15
	{
		float __log_depth = textureLod(depth_tex_frg_15, SCREEN_UV, 0.0).x;
	vec4 __depth_view = INV_PROJECTION_MATRIX * vec4(SCREEN_UV * 2.0 - 1.0, __log_depth, 1.0);
		__depth_view.xyz /= __depth_view.w;
		n_out15p0 = -__depth_view.z;
	}


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);
	ALPHA = n_out20p0;
	SPECULAR = n_out15p0;


}

void light() {
// ColorConstant:2
	vec4 n_out2p0 = vec4(1.000000, 1.000000, 1.000000, 1.000000);
	float n_out2p4 = n_out2p0.a;


// Output:0
	DIFFUSE_LIGHT = vec3(n_out2p0.xyz);
	SPECULAR_LIGHT = vec3(n_out2p0.xyz);
	ALPHA = n_out2p4;


}
"
modes/blend = 1
modes/depth_draw = 2
modes/specular = 2
flags/depth_test_disabled = true
flags/unshaded = true
flags/shadows_disabled = true
nodes/vertex/0/position = Vector2(680, 260)
nodes/vertex/3/node = SubResource("VisualShaderNodeBillboard_3oo0a")
nodes/vertex/3/position = Vector2(-20, 560)
nodes/vertex/4/node = SubResource("VisualShaderNodeVectorOp_lkuhg")
nodes/vertex/4/position = Vector2(480, 200)
nodes/vertex/5/node = SubResource("VisualShaderNodeInput_unjqk")
nodes/vertex/5/position = Vector2(-20, 120)
nodes/vertex/6/node = SubResource("VisualShaderNodeVectorDistance_0lha1")
nodes/vertex/6/position = Vector2(280, 240)
nodes/vertex/7/node = SubResource("VisualShaderNodeInput_wg0hc")
nodes/vertex/7/position = Vector2(-20, 420)
nodes/vertex/8/node = SubResource("VisualShaderNodeInput_p7hb8")
nodes/vertex/8/position = Vector2(-20, 260)
nodes/vertex/connections = PackedInt32Array(3, 0, 0, 10, 4, 0, 0, 0, 5, 0, 4, 0, 6, 0, 4, 1, 8, 0, 6, 0, 7, 0, 6, 1)
nodes/fragment/0/position = Vector2(1360, 1580)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_asp1w")
nodes/fragment/2/position = Vector2(500, 1180)
nodes/fragment/6/node = SubResource("VisualShaderNodeTexture_s42v1")
nodes/fragment/6/position = Vector2(520, 1660)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatOp_0xdif")
nodes/fragment/10/position = Vector2(760, 1600)
nodes/fragment/11/node = SubResource("VisualShaderNodeClamp_d6yay")
nodes/fragment/11/position = Vector2(560, 1560)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatOp_yawhi")
nodes/fragment/12/position = Vector2(360, 1600)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatParameter_56ljh")
nodes/fragment/13/position = Vector2(120, 1700)
nodes/fragment/14/node = SubResource("VisualShaderNodeFloatOp_671y0")
nodes/fragment/14/position = Vector2(960, 1600)
nodes/fragment/15/node = SubResource("VisualShaderNodeLinearSceneDepth_kno1p")
nodes/fragment/15/position = Vector2(140, 1360)
nodes/fragment/16/node = SubResource("VisualShaderNodeVectorDistance_pbq7r")
nodes/fragment/16/position = Vector2(160, 1420)
nodes/fragment/17/node = SubResource("VisualShaderNodeInput_i27g4")
nodes/fragment/17/position = Vector2(-140, 1440)
nodes/fragment/18/node = SubResource("VisualShaderNodeInput_j15cl")
nodes/fragment/18/position = Vector2(-140, 1580)
nodes/fragment/19/node = SubResource("VisualShaderNodeFloatOp_3kp43")
nodes/fragment/19/position = Vector2(360, 1400)
nodes/fragment/20/node = SubResource("VisualShaderNodeFloatOp_sguu7")
nodes/fragment/20/position = Vector2(1160, 1580)
nodes/fragment/21/node = SubResource("VisualShaderNodeClamp_u3lhu")
nodes/fragment/21/position = Vector2(560, 1420)
nodes/fragment/22/node = SubResource("VisualShaderNodeTexture_7elpt")
nodes/fragment/22/position = Vector2(1213.95, 2553.07)
nodes/fragment/24/node = SubResource("VisualShaderNodeExpression_v2q7n")
nodes/fragment/24/position = Vector2(-120, 1160)
nodes/fragment/24/size = Vector2(400.356, 186.421)
nodes/fragment/24/input_ports = "0,3,node_pos;"
nodes/fragment/24/output_ports = "0,0,linear_depth;"
nodes/fragment/24/expression = "float depth = textureLod(depth_texture, SCREEN_UV, 0.0).r;
vec4 upos = INV_PROJECTION_MATRIX * vec4(node_pos, depth, 1.0);
vec3 pixel_position = upos.xyz / upos.w;
	
linear_depth = -pixel_position.z * 0.1;"
nodes/fragment/25/node = SubResource("VisualShaderNodeInput_6vswk")
nodes/fragment/25/position = Vector2(-400, 1180)
nodes/fragment/connections = PackedInt32Array(6, 4, 10, 1, 11, 0, 10, 0, 12, 0, 11, 0, 13, 0, 12, 1, 2, 4, 14, 1, 10, 0, 14, 0, 18, 0, 16, 1, 16, 0, 19, 1, 14, 0, 20, 1, 20, 0, 0, 1, 19, 0, 21, 0, 21, 0, 20, 0, 16, 0, 12, 0, 2, 0, 0, 0, 17, 0, 16, 0, 15, 0, 0, 4, 24, 0, 19, 0, 25, 0, 24, 0)
nodes/light/2/node = SubResource("VisualShaderNodeColorConstant_34fr2")
nodes/light/2/position = Vector2(240, 140)
nodes/light/connections = PackedInt32Array(2, 0, 0, 1, 2, 4, 0, 2, 2, 0, 0, 0)
